/**
 * ==============================================================================
 * üì¶ MODUL:         AuditSafe
 * üìÅ DATEIPFAD:     /rse-privacysuite/modules/audit-safe.js
 * üÜî MODUL-ID:      RSE-MOD-AUDITSAFE-V1
 * üìÖ ERSTELLT AM:   05.07.2025
 * ‚úèÔ∏è GE√ÑNDERT AM:   05.07.2025 ‚Äì RSE-Systems (riber@rse-systems.com)
 * üß© ABH√ÑNGIGKEITEN: PrivacyCore (Consent muss geladen sein)
 * üîí SICHTBARKEIT:  Nicht √∂ffentlich sichtbar ‚Äì Debug/Log-Funktion nur intern
 * üìå BESCHREIBUNG:
 *     Dieses Modul speichert lokal eine Audit-Timeline der wichtigsten
 *     Datenschutzaktionen des Nutzers (Einwilligung, Widerruf, √Ñnderung).
 *     Diese Daten sind nicht personalisiert, aber f√ºr Pr√ºfzwecke geeignet.
 *
 * ‚ö†Ô∏è SICHERHEITSHINWEIS:
 *     Es erfolgt KEINE √úbertragung an externe Server. Alles bleibt lokal im
 *     Browser. Logs k√∂nnen durch RSE-Support ausgelesen oder exportiert werden.
 * ==============================================================================
 */

(function () {
  const LOG_KEY = "rse_audit_log";

  function loadLog() {
    try {
      return JSON.parse(localStorage.getItem(LOG_KEY)) || [];
    } catch (e) {
      return [];
    }
  }

  function saveLog(logArray) {
    localStorage.setItem(LOG_KEY, JSON.stringify(logArray));
  }

  function logEvent(eventType, details = {}) {
    const logArray = loadLog();
    const entry = {
      timestamp: new Date().toISOString(),
      event: eventType,
      meta: details
    };
    logArray.push(entry);
    saveLog(logArray);
    console.info("[RSE][Audit] Ereignis gespeichert:", entry);
  }

  // Ereignisse manuell verf√ºgbar machen f√ºr andere Module:
  window.RSEAuditSafe = {
    logConsentGiven: (source) => {
      const consent = window.RSEPrivacyCore?.getConsent?.() || {};
      logEvent("consent_given", { consent, source });
    },
    logConsentRevoked: () => {
      logEvent("consent_revoked");
    },
    logConsentChanged: (updatedConsent) => {
      logEvent("consent_updated", { updatedConsent });
    },
    exportLog: () => {
      const log = loadLog();
      return JSON.stringify(log, null, 2);
    },
    clearLog: () => {
      localStorage.removeItem(LOG_KEY);
      console.warn("[RSE][Audit] Audit-Log gel√∂scht.");
    }
  };
})();
